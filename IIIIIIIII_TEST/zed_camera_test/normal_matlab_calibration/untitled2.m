% Auto-generated by cameraCalibrator app on 09-Jun-2024
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/home/steven/aaaaaaaaaaaaaaaaaaaaa/1.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/10.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/11.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/12.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/13.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/14.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/15.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/2.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/3.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/4.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/5.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/6.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/7.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/8.png',...
    '/home/steven/aaaaaaaaaaaaaaaaaaaaa/9.png',...
    '/home/steven/16.png',...
    '/home/steven/17.png',...
    '/home/steven/18.png',...
    '/home/steven/19.png',...
    '/home/steven/20.png',...
    '/home/steven/21.png',...
    '/home/steven/22.png',...
    '/home/steven/23.png',...
    '/home/steven/24.png',...
    '/home/steven/25.png',...
    '/home/steven/26.png',...
    '/home/steven/27.png',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 15;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera
params = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);


[intrinsicMatrix,distortionCoefficients] = cameraIntrinsicsToOpenCV(params);

